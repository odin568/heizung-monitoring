plugins {
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
	id 'idea'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jar {
	enabled = false
}

// GitHub-Version >> Docker Version >> Fallback
if (System.getenv("RELEASE_VERSION")) {
	version = System.getenv("RELEASE_VERSION")
}
else if (project.hasProperty("RELEASE_VERSION") && project.getProperty("RELEASE_VERSION") && !project.getProperty("RELEASE_VERSION").allWhitespace) {
	version = project.getProperty("RELEASE_VERSION")
}
else {
	version = "SNAPSHOT"
}
println("Building version $version")

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

springBoot {
	buildInfo()
}


task packageDistribution(type: Zip) {
	archiveFileName = "heizung-monitoring.zip"
	destinationDirectory = file("$layout.buildDirectory/release")
	from "$layout.buildDirectory/dist"
}

// Adapt docker-compose.yml with correct version
task adaptDockerCompose(type: Copy) {
	from "$layout.buildDirectory/../deploy/docker-compose.yml"
	into "$layout.buildDirectory/dist"
	filter { line -> line.replaceAll('latest', version) }
}
task copyArtifacts {
	mkdir "$layout.buildDirectory/dist/grafana"
	copy {
		from "$layout.buildDirectory/../deploy/nginx"
		into "$layout.buildDirectory/dist/nginx"
	}

	copy {
		from "$layout.buildDirectory/../deploy/prometheus/prometheus.yml"
		into "$layout.buildDirectory/dist/prometheus/"
	}
}

build {
	finalizedBy(packageDistribution)
}

packageDistribution.dependsOn(copyArtifacts)
packageDistribution.dependsOn(adaptDockerCompose)
